{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","state","fullpageApi","Wrapper","className","id","class","onClick","moveTo","href","target","Container","Row","Col","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oOAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kCCiINC,IAASC,OAAO,mBAzIC,kBACf,kBAAC,IAAD,CAKEA,OAAQ,YAA4B,EAAzBC,MAA0B,IAAnBC,EAAkB,EAAlBA,YAGhB,OACE,kBAAC,IAAcC,QAAf,KAEE,yBAAKC,UAAU,UAAUC,GAAG,YAC1B,yBAAKA,GAAG,kBACN,wBAAIA,GAAG,aAAP,mBAKF,yBAAKA,GAAG,UAAR,UAGA,yBAAKA,GAAG,kBACR,4BAAQC,MAAM,UAAUD,GAAG,WAAWE,QAAS,kBAAML,EAAYM,OAAO,EAAG,KACzE,qCAEF,4BAAQF,MAAM,UAAUD,GAAG,WAAWE,QAAS,kBAAML,EAAYM,OAAO,EAAG,KACzE,oCAEF,uBAAGC,KAAK,yCAAyCC,OAAO,SAASL,GAAG,mBAApE,aAIF,kBAACM,EAAA,EAAD,CAAWP,UAAU,UAAUC,GAAG,YAChC,yBAAKA,GAAG,gBACR,wBAAIA,GAAG,aAAP,wBACA,kBAACO,EAAA,EAAD,CAAKP,GAAG,WACN,kBAACQ,EAAA,EAAD,CAAKR,GAAG,YACN,wBAAIC,MAAM,WAAWD,GAAG,aAAxB,WACA,kDACA,wEACA,sDAEF,kBAACQ,EAAA,EAAD,CAAKR,GAAG,YACN,wBAAIC,MAAM,WAAWD,GAAG,aAAxB,WACA,8DACA,wCACA,qDAGJ,uBAAGA,GAAG,cAAN,kCACA,yBAAKA,GAAG,mBAGV,yBAAKD,UAAU,UAAUC,GAAG,WAC1B,yBAAKA,GAAG,gBACR,yBAAKA,GAAG,qBACN,wBAAIA,GAAG,iBAAP,+BACA,0JAEF,yBAAKA,GAAG,oBACN,6FACA,4BACE,4FACA,6EACA,sHAGJ,yBAAKA,GAAG,cACN,uBAAGI,KAAK,uCAAuCC,OAAO,SAASN,UAAU,mBAAzE,kBACA,uBAAGK,KAAK,uCAAuCC,OAAO,SAASN,UAAU,mBAAzE,yBAmEE,MAAcU,SAASC,eAAe,SDhBhD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.ef7db29f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport { Container , Row, Col } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Fullpage = () => (\n  <ReactFullpage\n    //fullpage options\n    // licenseKey = {'YOUR_KEY_HERE'}\n    // scrollingSpeed = {1000} /* Options here */\n\n    render={({ state, fullpageApi }) => {\n      var colors = ['#003057', '#B3A369']\n\n      return (\n        <ReactFullpage.Wrapper>\n          \n          <div className=\"section\" id=\"section1\">\n            <div id=\"name-container\">\n              <h1 id=\"main-name\">Michael Reilly</h1>\n            </div>\n            {/* <div id=\"quote-container\">\n              <h5 id=\"quote\">\"Simplicity is the ultimate sophistication\"</h5>\n            </div> */}\n            <div id=\"scroll\">\n              scroll\n            </div>\n            <div id=\"nav-hint-down\"></div>\n            <button class=\"diamond\" id=\"diamond1\" onClick={() => fullpageApi.moveTo(2, 0)}>\n              <span>GT</span>\n            </button>\n            <button class=\"diamond\" id=\"diamond2\" onClick={() => fullpageApi.moveTo(3, 0)}>\n              <span>J</span>\n            </button>\n            <a href=\"https://www.linkedin.com/in/mpreilly5/\" target=\"_blank\" id=\"linkedin-button\">Linkedin</a>\n              \n          </div>\n\n          <Container className=\"section\" id=\"section2\">\n            <div id=\"nav-hint-up\"></div>\n            <h1 id=\"sec2title\">Mike at Georgia Tech</h1>\n            <Row id=\"statrow\">\n              <Col id=\"statcol1\">\n                <h2 class=\"colTitle\" id=\"col1Title\">Student</h2>\n                <p>3.93 Cumulative GPA</p>\n                <p>Internships at The Home Depot & BlackRock</p>\n                <p>Graduated in 3.5 years</p>\n              </Col>\n              <Col id=\"statcol2\">\n                <h2 class=\"colTitle\" id=\"col2Title\">Athlete</h2>\n                <p>Cross Country and Track & Field</p>\n                <p>4:08 Mile</p>\n                <p>~2600 Miles per Year</p>\n              </Col>\n            </Row>\n            <p id=\"bonus-stat\">3-time ACC Academic Honor Roll</p>\n            <div id=\"nav-hint-down\"></div>\n          </Container>\n\n          <div className=\"section\" id=\"project\">\n            <div id=\"nav-hint-up\"></div>\n            <div id=\"jeopardy-headline\">\n              <h2 id=\"project-title\">Personal Project: Jeopardy!</h2>\n              <p>Play Jeopardy with the questions from full past games! I threw this together one finals week when I didn't have any exams.</p>\n            </div>\n            <div id=\"jeopardy-details\">\n              <h5>Using the game code, separate devices can join the same game:</h5>\n              <ul>\n                <li>Game board to be displayed on a TV or Zoom chat, for example</li>\n                <li>3 players, with functioning real-time buzzers</li>\n                <li>A \"Trebek\" screen for a host to see the answers and determine if players are correct</li>\n              </ul>\n            </div>\n            <div id=\"button-box\">\n              <a href=\"https://mpreilly.github.io/jeopardy/\" target=\"_blank\" className=\"jeopardy-button\">Go to Jeopardy</a>\n              <a href=\"https://github.com/mpreilly/jeopardy\" target=\"_blank\" className=\"jeopardy-button\">See on Github</a>\n            </div>\n            {/* <form target=\"_blank\" action=\"https://mpreilly.github.io/jeopardy/\">\n              <input type=\"submit\" className=\"jeopardy-button\" value=\"Go to Jeopardy\" />\n            </form>\n            <form target=\"_blank\" action=\"https://github.com/mpreilly/jeopardy\">\n              <input type=\"submit\" className=\"jeopardy-button\"  value=\"See on Github\" />\n            </form> */}\n          </div>\n\n          {/* <div className=\"section\" id=\"photo-section\">\n            <div class=\"square img_3-3\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_3-1\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_2-3\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_2-2\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_1-1\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_1-2\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_3-2\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_1-3\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_2-1\" style={{backgroundColor:'#B3A369'}} />\n\n            <div class=\"square img_2-2\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_3-2\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_2-1\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_1-3\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_3-1\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_1-2\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_3-3\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_1-1\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_2-3\" style={{backgroundColor:'#003057'}} />\n\n\n            <div class=\"square img_1-3\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_2-1\" style={{backgroundColor:'#003057'}} />\n            <div class=\"nameBox\" >\n              <h1 id=\"name\">Michael Reilly </h1>\n              <p id=\"gtcs\">Georgia Tech Computer Science Graduate</p>\n            </div>\n            <div class=\"square img_2-3\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_3-2\" style={{backgroundColor:'#003057'}} />\n\n            <div class=\"square img_1-1\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_1-2\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_1-3\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_2-1\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_2-2\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_2-3\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_3-1\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_3-2\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_3-3\" style={{backgroundColor:'#B3A369'}} />\n\n            <div class=\"square img_3-3\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_2-1\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_2-2\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_2-3\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_1-1\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_3-2\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_1-3\" style={{backgroundColor:'#003057'}} />\n            <div class=\"square img_3-1\" style={{backgroundColor:'#B3A369'}} />\n            <div class=\"square img_1-2\" style={{backgroundColor:'#003057'}} />\n          </div> */}\n        </ReactFullpage.Wrapper>\n      );\n    }}\n  />\n);\n\nReactDOM.render(<Fullpage />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}